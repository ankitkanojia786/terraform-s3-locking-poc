AWSTemplateFormatVersion: '2010-09-09'
Description: Terraform Pipeline with S3 Native Locking POC

Parameters:
  GitHubRepo:
    Type: String
    Default: ankitkanojia786/terraform-s3-locking-poc
  GitHubBranch:
    Type: String
    Default: main
  GitHubToken:
    Type: String
    NoEcho: true

Resources:
  TerraformStateBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "terraform-state-${AWS::AccountId}-${AWS::Region}"
      VersioningConfiguration:
        Status: Enabled

  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "codepipeline-artifacts-${AWS::AccountId}-${AWS::Region}"

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  TerraformPlanProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: terraform-plan-poc
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              commands:
                - wget -q https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
                - unzip -q terraform_1.5.7_linux_amd64.zip
                - mv terraform /usr/local/bin/
            pre_build:
              commands:
                - cd infrastructure
                - echo 'terraform { backend "s3" { bucket = "'${TF_STATE_BUCKET}'", key = "terraform.tfstate", region = "'${AWS_REGION}'", force_path_style = true } }' > backend.tf
                - terraform init
            build:
              commands:
                - terraform plan -out=tfplan -var="environment=poc"
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        EnvironmentVariables:
          - Name: TF_STATE_BUCKET
            Value: !Ref TerraformStateBucket

  TerraformApplyProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: terraform-apply-poc
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              commands:
                - wget -q https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
                - unzip -q terraform_1.5.7_linux_amd64.zip
                - mv terraform /usr/local/bin/
            pre_build:
              commands:
                - cd infrastructure
                - echo 'terraform { backend "s3" { bucket = "'${TF_STATE_BUCKET}'", key = "terraform.tfstate", region = "'${AWS_REGION}'", force_path_style = true } }' > backend.tf
                - terraform init
            build:
              commands:
                - terraform apply -auto-approve tfplan
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        EnvironmentVariables:
          - Name: TF_STATE_BUCKET
            Value: !Ref TerraformStateBucket

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:*
                  - s3:*
                Resource: "*"

  TerraformPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: terraform-s3-locking-poc
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStoreBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub-Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: ankitkanojia786
                Repo: terraform-s3-locking-poc
                Branch: main
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: SourceCode
        - Name: Plan
          Actions:
            - Name: Terraform-Plan
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref TerraformPlanProject
              InputArtifacts:
                - Name: SourceCode
        - Name: Approval
          Actions:
            - Name: Manual-Approval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              Configuration:
                CustomData: Approve deployment
        - Name: Apply
          Actions:
            - Name: Terraform-Apply
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref TerraformApplyProject
              InputArtifacts:
                - Name: SourceCode

Outputs:
  StateBucketName:
    Value: !Ref TerraformStateBucket
  PipelineName:
    Value: !Ref TerraformPipeline
