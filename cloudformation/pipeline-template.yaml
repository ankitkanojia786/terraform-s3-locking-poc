AWSTemplateFormatVersion: '2010-09-09'
Description: 'CodePipeline for Terraform S3 State Locking POC'

Parameters:
  GitHubOwner:
    Type: String
    Description: GitHub repository owner/username
    Default: "ankitkanojia786"
    
  GitHubRepo:
    Type: String
    Description: GitHub repository name
    Default: "TerraformApplyProject"
    
  GitHubBranch:
    Type: String
    Default: main
    Description: GitHub branch
    
  GitHubOAuthToken:
    Type: String
    Description: GitHub OAuth token
    NoEcho: true

Resources:
  # S3 Bucket for Pipeline Artifacts
  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'terraform-artifacts-${AWS::AccountId}-${AWS::Region}'
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # CodeBuild Project for Terraform - NO BuildSpec here (uses external file)
  TerraformBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub 'terraform-build-${AWS::StackName}'
      Description: 'CodeBuild project for Terraform deployment'
      ServiceRole: !GetAtt CodeBuildRole.Arn
      
      # CodeBuild will automatically use the buildspec.yml from source
      Source:
        Type: CODEPIPELINE
        BuildSpec: ""  # Empty - uses external buildspec.yml
      
      Artifacts:
        Type: CODEPIPELINE
      
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: false
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: TF_IN_AUTOMATION
            Value: "true"

  # CodePipeline
  TerraformPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub 'terraform-s3-locking-pipeline'
      RoleArn: !GetAtt CodePipelineRole.Arn
      
      # Required ArtifactStore
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactsBucket
      
      Stages:
        # Stage 1: Source from GitHub
        - Name: Source
          Actions:
            - Name: GitHub-Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubOAuthToken
                PollForSourceChanges: true
              OutputArtifacts:
                - Name: SourceCode
              RunOrder: 1

        # Stage 2: Terraform Build and Deploy
        - Name: Deploy
          Actions:
            - Name: Terraform-Deploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref TerraformBuildProject
              InputArtifacts:
                - Name: SourceCode
              RunOrder: 1

  # IAM Role for CodePipeline
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:PutObject
                  - s3:PutObjectAcl
                Resource:
                  - !GetAtt ArtifactsBucket.Arn
                  - !Sub '${ArtifactsBucket.Arn}/*'
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                  - codebuild:StopBuild
                Resource: !GetAtt TerraformBuildProject.Arn

  # IAM Role for CodeBuild
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - ec2:*
                  - vpc:*
                  - iam:*
                  - dynamodb:*
                  - cloudformation:*
                  - logs:*
                Resource: '*'

Outputs:
  PipelineName:
    Description: Name of the created CodePipeline
    Value: !Ref TerraformPipeline
    
  ArtifactsBucketName:
    Description: S3 bucket for pipeline artifacts
    Value: !Ref ArtifactsBucket
    
  CodeBuildProject:
    Description: CodeBuild project name
    Value: !Ref TerraformBuildProject
    
  PipelineUrl:
    Description: URL to access the pipeline in AWS Console
    Value: !Sub 'https://${AWS::Region}.console.aws.amazon.com/codesuite/codepipeline/pipelines/${TerraformPipeline}/view?region=${AWS::Region}'
